{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","SearchBox","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAY,mCAAjB,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,cACpB,gCACC,6BAAKC,IACL,4BAAIC,WCYOI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAQ,cAAC,EAAD,CAERV,GAAMO,EAAOG,GAAGV,GAChBC,KAAOM,EAAOG,GAAGT,KACjBC,MAAQK,EAAOG,GAAGR,OAHZQ,SCMIC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAW,MAAhB,SACC,uBACAA,UAAW,0BACXW,KAAK,SACLC,YAAY,yBACZC,SAAWH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACEJ,EAAMK,YC2CKC,G,8DAvCd,aAAe,IAAD,8BACb,gBAWDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAX1C,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBmB,MAAM,8CAA8CtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAAQxC,MAAK,SAAAyC,GAAU,EAAKP,SAAS,CAACpB,OAAQ2B,S,oBAO7H,WACC,MAAgCC,KAAKL,MAA7BvB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAIhC,EAAOkC,OAIT,sBAAKtC,UAAW,KAAhB,UACC,oBAAIA,UAAY,KAAhB,sBACA,cAACuC,EAAD,CAAW7B,aAAgBsB,KAAKV,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAW6B,SAPhB,gD,GAvBQO,cCDlBC,IAASC,OACP,eAAC,IAAMC,WAAP,eAAmB,cAAC,EAAD,IAAnB,OACAC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.497c0d71.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = ({id, name, email}) => {\r\n\treturn(\r\n\t\t<div className = 'dib br3 pa0 ma1 grow bw2 shadow5'>\r\n\t\t\t<img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (<Card \r\n\t\t\t\t\tkey= {i} \r\n\t\t\t\t\tid = {robots[i].id} \r\n\t\t\t\t\tname= {robots[i].name} \r\n\t\t\t\t\temail= {robots[i].email} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst Searchbox = ({ searchfield, searchChange }) => {\r\n\treturn(\r\n\t\t<div className= 'pa2' >\r\n\t\t\t<input\r\n\t\t\tclassName= 'pa1 ba b--green bg-gold' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search your robot here'\r\n\t\t\tonChange= {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Searchbox","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{overflowY: 'scroll', border: '1px solid black', height: '500px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll ","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList' \r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll.js'\r\nimport '../components/card.css'\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {this.setState({robots: users})});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(!robots.length){\r\n\t\t\treturn <h1>Loading...</h1>\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className= 'tc'>\r\n\t\t\t\t\t<h1 className = 'f1'>MYROBOTS</h1>\r\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots = { filteredRobots }/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode> <App /> </React.StrictMode> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}